openapi: 3.0.0
info:
  title: API de Usuários e Transações
  description: API para gerenciar usuários e suas transações financeiras
  version: 1.0.0
  
servers:
  - url: /api/v1
    description: Servidor de desenvolvimento

tags:
  - name: Users
    description: Operações relacionadas a usuários
  - name: Transactions
    description: Operações relacionadas a transações financeiras

paths:
  /users:
    get:
      summary: Lista todos os usuários
      tags:
        - Users
      responses:
        '200':
          description: Lista de usuários obtida com sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      summary: Cria um novo usuário
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
      responses:
        '201':
          description: Usuário criado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Dados inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /users/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
        description: ID do usuário
    get:
      summary: Obtém um usuário pelo ID
      tags:
        - Users
      responses:
        '200':
          description: Usuário encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: Usuário não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Atualiza um usuário existente
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdate'
      responses:
        '200':
          description: Usuário atualizado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Dados inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Usuário não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Remove um usuário (soft delete)
      tags:
        - Users
      responses:
        '204':
          description: Usuário removido com sucesso
        '404':
          description: Usuário não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /users/{id}/transactions:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
        description: ID do usuário
    get:
      summary: Lista todas as transações de um usuário
      tags:
        - Users
        - Transactions
      responses:
        '200':
          description: Lista de transações obtida com sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Transaction'
        '404':
          description: Usuário não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /transactions:
    get:
      summary: Lista todas as transações
      tags:
        - Transactions
      parameters:
        - name: user_id
          in: query
          required: false
          schema:
            type: integer
          description: Filtrar por ID do usuário
        - name: type
          in: query
          required: false
          schema:
            type: string
          description: Filtrar por tipo de transação
      responses:
        '200':
          description: Lista de transações obtida com sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Transaction'
    post:
      summary: Cria uma nova transação
      tags:
        - Transactions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionCreate'
      responses:
        '201':
          description: Transação criada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
        '400':
          description: Dados inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Usuário não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /transactions/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
        description: ID da transação
    get:
      summary: Obtém uma transação pelo ID
      tags:
        - Transactions
      responses:
        '200':
          description: Transação encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
        '404':
          description: Transação não encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Atualiza uma transação existente
      tags:
        - Transactions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionUpdate'
      responses:
        '200':
          description: Transação atualizada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
        '400':
          description: Dados inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Transação não encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Remove uma transação (soft delete)
      tags:
        - Transactions
      responses:
        '204':
          description: Transação removida com sucesso
        '404':
          description: Transação não encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
          description: ID único do usuário
        username:
          type: string
          maxLength: 100
          description: Nome de usuário
        password_hash:
          type: string
          maxLength: 255
          writeOnly: true
          description: Hash da senha (nunca retornado nas respostas)
        create_date:
          type: string
          format: date-time
          readOnly: true
          description: Data de criação do registro
        updated_date:
          type: string
          format: date-time
          readOnly: true
          description: Data da última atualização
        deleted_date:
          type: string
          format: date-time
          nullable: true
          readOnly: true
          description: Data de exclusão (soft delete)
      required:
        - id
        - username
        - create_date
        - updated_date

    UserCreate:
      type: object
      properties:
        username:
          type: string
          maxLength: 100
          description: Nome de usuário
        password:
          type: string
          format: password
          minLength: 8
          description: Senha do usuário (será transformada em hash)
      required:
        - username
        - password

    UserUpdate:
      type: object
      properties:
        username:
          type: string
          maxLength: 100
          description: Nome de usuário
        password:
          type: string
          format: password
          minLength: 8
          description: Nova senha do usuário (será transformada em hash)

    Transaction:
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
          description: ID único da transação
        amount:
          type: number
          format: float
          description: Valor da transação
        type:
          type: string
          maxLength: 255
          description: Tipo da transação
        user_id:
          type: integer
          format: int64
          description: ID do usuário associado
        create_date:
          type: string
          format: date-time
          readOnly: true
          description: Data de criação do registro
        updated_date:
          type: string
          format: date-time
          readOnly: true
          description: Data da última atualização
        deleted_date:
          type: string
          format: date-time
          nullable: true
          readOnly: true
          description: Data de exclusão (soft delete)
        user:
          $ref: '#/components/schemas/User'
          description: Usuário associado à transação
      required:
        - id
        - amount
        - type
        - user_id
        - create_date
        - updated_date

    TransactionCreate:
      type: object
      properties:
        amount:
          type: number
          format: float
          description: Valor da transação
        type:
          type: string
          maxLength: 255
          description: Tipo da transação
        user_id:
          type: integer
          format: int64
          description: ID do usuário associado
      required:
        - amount
        - type
        - user_id

    TransactionUpdate:
      type: object
      properties:
        amount:
          type: number
          format: float
          description: Valor da transação
        type:
          type: string
          maxLength: 255
          description: Tipo da transação

    Error:
      type: object
      properties:
        code:
          type: integer
          description: Código do erro
        message:
          type: string
          description: Mensagem descritiva do erro
        details:
          type: object
          description: Detalhes adicionais do erro
      required:
        - code
        - message